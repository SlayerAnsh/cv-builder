{"version":3,"sources":["webpack:///./src/components/basic/base.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/editable.js","webpack:///./src/components/basic/name.js","webpack:///./src/components/basic/links.js","webpack:///./src/components/basic/about.js","webpack:///./src/components/basic/header.js","webpack:///./src/components/basic/work.js","webpack:///./src/components/basic/education.js","webpack:///./src/components/basic/project.js","webpack:///./src/components/basic/tech.js","webpack:///./src/components/basic/general.js","webpack:///./src/components/basic/interest.js","webpack:///./src/components/basic/center.js","webpack:///./src/components/basic/pdf.js","webpack:///./src/pages/basic.js"],"names":["Font","register","family","fonts","src","AbelPro","AbelProBold","fontWeight","registerHyphenationCallback","word","styles","StyleSheet","create","page","display","flexDirection","alignItems","wordBreak","fontFamily","fontSize","lineHeight","Base","children","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","size","style","EditableText","text","placeholder","type","childRef","useState","isEditing","setEditing","useEffect","current","focus","onBlur","e","currentTarget","contains","relatedTarget","onKeyDown","event","allKeys","handleKeyDown","onClick","EditableLink","web","name","alignSelf","marginLeft","Name","data","setData","inputRef","useRef","ref","value","onChange","links","flexWrap","justifyContent","padding","marginTop","backgroundColor","link","flex","flexGrow","flexShrink","flexBasis","textDecoration","color","Links","map","index","prev","splice","about","marginRight","About","cols","rows","view","paddingTop","Header","work","title","textTransform","headView","head","duration","points","Work","works","point","indexp","education","left","right","textAlign","Education","educations","project","Project","projects","tech","skills","Tech","techs","general","skill","bar","height","borderRadius","width","val","General","generals","isNaN","parseInt","interest","block","margin","Interest","interests","paddingRight","Center","Pdf","MainDiv","styled","div","PdfContainer","Button","button","Input","textarea","Basic","dataRef","pdf","toBlob","then","blob","console","log","a","document","createElement","body","appendChild","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","remove","dataStr","encodeURIComponent","JSON","stringify","parse","error"],"mappings":"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","file":"component---src-pages-basic-js-ac7cacea538005bd5381.js","sourcesContent":["import React from 'react'\r\nimport AbelPro from '../../fonts/Abel-Pro/AbelPro.ttf'\r\nimport AbelProBold from '../../fonts/Abel-Pro/AbelPro-Bold.ttf'\r\nimport {Document,Page,StyleSheet,Font} from '@react-pdf/renderer'\r\n\r\nFont.register({family:'Abel-Pro', fonts:[ {src:AbelPro}, {src:AbelProBold, fontWeight:'bold'}, ] })\r\nFont.registerHyphenationCallback(word => {\r\n    return [word];\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'stretch',\r\n        wordBreak:'keep-all',\r\n        fontFamily:'Abel-Pro',\r\n        fontSize:'5mm',\r\n        lineHeight:'1.2'\r\n    }\r\n});\r\n\r\nfunction Base({children,...props}) {\r\n    return (\r\n        <Document>\r\n            <Page size='A4' style={styles.page}>\r\n                {children}\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\n\r\nexport default Base\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState, useEffect } from 'react'\r\nimport {Text,Link} from '@react-pdf/renderer'\r\n\r\nexport function EditableText({text,placeholder,type,children,style,childRef}) {\r\n    const [isEditing,setEditing] = useState(false);\r\n    \r\n    const handleKeyDown = (event, type) => {\r\n        const { key } = event;\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; \r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n          childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    return (\r\n        isEditing?(\r\n            <div\r\n            style={style}\r\n            onBlur={(e) => {\r\n                if(!e.currentTarget.contains(e.relatedTarget))\r\n                    setEditing(false)\r\n            }}\r\n            onKeyDown={e => handleKeyDown(e, type)}>\r\n                {children}\r\n            </div>\r\n        ):(\r\n            <Text style={style} onClick={()=>setEditing(true)}>{text||placeholder}</Text>\r\n        )\r\n    )\r\n}\r\n\r\nexport function EditableLink({web,src,text,placeholder,type,children,style,childRef}) {\r\n    const [isEditing,setEditing] = useState(false);\r\n    const handleKeyDown = (event, type) => {\r\n        const { key } = event;\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; \r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n          childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    return (\r\n        isEditing?(\r\n            <div\r\n            style={style}\r\n            onBlur={(e) => {\r\n                if(!e.currentTarget.contains(e.relatedTarget))\r\n                    setEditing(false)\r\n            }}\r\n            onKeyDown={e => handleKeyDown(e, type)}>\r\n                {children}\r\n            </div>\r\n        ):(\r\n            web?\r\n            <span style={style} onClick={()=>setEditing(true)}>{text||placeholder}</span>:\r\n            <Text style={style}onClick={()=>setEditing(true)}><Link src={src}>{text||placeholder}</Link></Text>\r\n        )\r\n    )\r\n}","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    name:{\r\n        alignSelf:'flex-start',\r\n        marginLeft:'10mm',\r\n        fontSize:'8mm',\r\n        fontWeight:'bold'\r\n    }\r\n})\r\n\r\nfunction Name({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <EditableText\r\n            text={data.name}\r\n            placeholder=\"YOUR NAME\"\r\n            type=\"input\"\r\n            childRef={inputRef}\r\n            style={styles.name}\r\n            >\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                name=\"NAME\"\r\n                placeholder=\"YOUR NAME\"\r\n                value={data.name}\r\n                onChange={e => setData({...data,name:e.target.value})}\r\n                style={{fontSize:'0.8em'}}\r\n            />\r\n        </EditableText>\r\n    )\r\n}\r\n\r\nexport default Name\r\n","import React,{useRef} from 'react'\r\nimport {EditableLink} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    links:{\r\n        fontSize:'4mm',\r\n        fontWeight:'normal',\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap',\r\n        justifyContent:'flex-start',\r\n        padding:'5pt 10mm 5pt 10mm',\r\n        marginTop:'4mm',\r\n        backgroundColor:'#f1f1f1'\r\n    },\r\n    link:{\r\n        flex:'1 0 40%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'40%',\r\n        textDecoration:'none',\r\n        padding:'3pt 0pt',\r\n        color:'black'\r\n    }\r\n})\r\n\r\nfunction Links({data,setData,web}) {\r\n    const inputRef = useRef(null);\r\n    return (\r\n        <View style={styles.links}>\r\n        {data.links?data.links.map((link,index)=>{\r\n            return (\r\n                <EditableLink\r\n                    text={link.text}\r\n                    src = {link.src}\r\n                    placeholder={\"Link \" + (index+1)}\r\n                    type=\"input\"\r\n                    childRef={inputRef}\r\n                    web={web}\r\n                    style={styles.link}\r\n                    >\r\n                    <input\r\n                        ref={inputRef}\r\n                        type=\"text\"\r\n                        name={\"link\" + index}\r\n                        placeholder=\"Link Text\"\r\n                        value={link.text}\r\n                        onChange={({target}) => setData(prev=>{\r\n                            prev.links[index].text = target.value||'';\r\n                            return {...prev}\r\n                        })}\r\n                        style={{fontSize:'0.8em'}}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name={\"link\" + index}\r\n                        placeholder=\"Link Src\"\r\n                        value={link.src}\r\n                        onChange={({target}) => setData(prev=>{\r\n                            prev.links[index].src = target.value||'';\r\n                            return {...prev}\r\n                        })}\r\n                        style={{fontSize:'0.8em'}}\r\n                    />\r\n                    <button onClick={()=>setData(prev=>{\r\n                        prev.links.splice(index+1,0,{text:'',src:''});\r\n                        return {...prev}\r\n                    })}>Add</button>\r\n                    <button onClick={()=>setData(prev=>{\r\n                        if(prev.links.length>1)\r\n                            prev.links.splice(index,1);\r\n                        return {...prev}\r\n                    })}>remove</button>\r\n                </EditableLink>\r\n            )\r\n        }):setData({...data,links:[{text:'',src:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    about:{\r\n        fontSize:'4mm',\r\n        fontWeight:'normal',\r\n        alignSelf:'flex-start',\r\n        marginLeft:'10mm',\r\n        color:'#3f3f3f',\r\n        marginRight:'20mm'\r\n    }\r\n})\r\n\r\nfunction About({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <EditableText\r\n            text={data.about}\r\n            placeholder=\"Your About\"\r\n            type=\"textarea\"\r\n            childRef={inputRef}\r\n            style={styles.about}\r\n            >\r\n            <textarea\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                name=\"about\"\r\n                placeholder=\"Your About\"\r\n                value={data.about}\r\n                onChange={e => setData({...data,about:e.target.value})}\r\n                style={{fontSize:'0.9em'}}\r\n                cols='70'\r\n                rows='10'\r\n            />\r\n        </EditableText>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport {View,StyleSheet} from '@react-pdf/renderer'\r\nimport Name from './name'\r\nimport Links from './links'\r\nimport About from './about'\r\n\r\nconst styles = StyleSheet.create({\r\n    view:{\r\n        alignSelf:'stretch',\r\n        // backgroundColor:'#e3e3e3',\r\n        paddingTop:'5mm',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    }\r\n})\r\n\r\nfunction Header({data,setData,web}) {\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <Name data={data} setData={setData}/>\r\n            <About data={data} setData={setData}/>\r\n            <Links data={data} setData={setData} web={web}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    work:{\r\n        alignSelf:'stretch',\r\n        marginTop:'3mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'flex-end',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Work({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.work}>\r\n            <EditableText\r\n                text={data.work}\r\n                placeholder=\"WORK EXPERIENCE\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"WORK\"\r\n                    placeholder=\"WORK EXPERIENCE\"\r\n                    value={data.work}\r\n                    onChange={e => setData({...data,work:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.works?data.works.map((work,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <EditableText\r\n                        text={work.head}\r\n                        placeholder={\"Work Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"work head\"\r\n                            placeholder={\"Work Title\" + (index + 1)}\r\n                            value={work.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.works[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.works.splice(index+1,0,{head:'',duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.works.length>1)\r\n                            prev.works.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableText\r\n                        text={work.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"work duration\"\r\n                            placeholder='duration'\r\n                            value={work.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.works[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </View>\r\n                {work.points.map((point,indexp)=>{\r\n                    return (\r\n                        <EditableText\r\n                            text={\"- \" + point}\r\n                            placeholder={'point ' + (indexp + 1)}\r\n                            type=\"input\"\r\n                            childRef={inputRef}\r\n                            style={styles.points}\r\n                            >\r\n                            <input\r\n                                ref={inputRef}\r\n                                type=\"text\"\r\n                                name=\"work point\"\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                value={point}\r\n                                onChange={({target}) => setData(prev=>{\r\n                                    prev.works[index].points[indexp] = target.value\r\n                                    return {...prev}\r\n                                })}\r\n                                style={{fontSize:'0.8em'}}\r\n                            />\r\n                            <button onClick={()=>setData(prev=>{\r\n                                prev.works[index].points.splice(indexp+1,0,'');\r\n                                return {...prev}\r\n                            })}>Add</button>\r\n                            <button onClick={()=>setData(prev=>{\r\n                                if(prev.works[index].points.length>1)\r\n                                prev.works[index].points.splice(indexp,1);\r\n                                return {...prev}\r\n                            })}>remove</button>\r\n                        </EditableText>\r\n                    )\r\n                })}\r\n                </>\r\n                )\r\n            }):setData({...data,works:[{head:'',duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    education:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    left:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        flex:'1 0 60%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'60%'\r\n    },\r\n    right:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        flex:'1 0 40%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'40%'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n        alignSelf:'flex-start',\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867',\r\n        textAlign:'right'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Education({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.education}>\r\n            <EditableText\r\n                text={data.education}\r\n                placeholder=\"Education\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"edu\"\r\n                    placeholder=\"Education\"\r\n                    value={data.work}\r\n                    onChange={e => setData({...data,education:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.educations?data.educations.map((education,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <View style={styles.left}>\r\n                    <EditableText\r\n                        text={education.head}\r\n                        placeholder={\"Education Title \" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"edu head\"\r\n                            placeholder={\"Education Title \" + (index + 1)}\r\n                            value={education.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.educations[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.educations.splice(index+1,0,{head:'',duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.educations.length>1)\r\n                            prev.educations.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    {education.points.map((point,indexp)=>{\r\n                        return (\r\n                            <EditableText\r\n                                text={point}\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                type=\"input\"\r\n                                childRef={inputRef}\r\n                                style={styles.points}\r\n                                >\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"text\"\r\n                                    name=\"edu point\"\r\n                                    placeholder={'point ' + (indexp + 1)}\r\n                                    value={point}\r\n                                    onChange={({target}) => setData(prev=>{\r\n                                        prev.educations[index].points[indexp] = target.value\r\n                                        return {...prev}\r\n                                    })}\r\n                                    style={{fontSize:'0.8em'}}\r\n                                />\r\n                                <button onClick={()=>setData(prev=>{\r\n                                    prev.educations[index].points.splice(indexp+1,0,'');\r\n                                    return {...prev}\r\n                                })}>Add</button>\r\n                                <button onClick={()=>setData(prev=>{\r\n                                    if(prev.works[index].points.length>1)\r\n                                    prev.educations[index].points.splice(indexp,1);\r\n                                    return {...prev}\r\n                                })}>remove</button>\r\n                            </EditableText>\r\n                        )\r\n                    })}\r\n                    </View>\r\n\r\n                    <View style={styles.right}>\r\n                    <EditableText\r\n                        text={education.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"textarea\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <textarea\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"edu duration\"\r\n                            placeholder='duration'\r\n                            value={education.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.educations[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                    </View>\r\n                    \r\n                </View>\r\n                </>\r\n                )\r\n            }):setData({...data,educations:[{head:'',duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React,{useRef} from 'react'\r\nimport {EditableText,EditableLink} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    project:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'flex-end',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n    },\r\n    link:{\r\n        textDecoration:'none',\r\n        fontSize:'12pt',\r\n        color:'green',\r\n        alignSelf:'center',\r\n        marginLeft:'4pt'\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Project({data,setData,web}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.project}>\r\n            <EditableText\r\n                text={data.project}\r\n                placeholder=\"Projects\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"project\"\r\n                    placeholder=\"Projects\"\r\n                    value={data.project}\r\n                    onChange={e => setData({...data,project:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.projects?data.projects.map((project,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <View style={{display:'flex',flexDirection:'row'}}>\r\n                    <EditableText\r\n                        text={project.head}\r\n                        placeholder={\"Project Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project head\"\r\n                            placeholder={\"Project Title\" + (index + 1)}\r\n                            value={project.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.projects.splice(index+1,0,{head:'',link:{text:'',src:''},duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.projects.length>1)\r\n                            prev.projects.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableLink\r\n                        text={\"[\" + project.link.text + \"]\"}\r\n                        src = {project.link.src}\r\n                        placeholder='Link'\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        web={web}\r\n                        style={styles.link}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project link\"\r\n                            placeholder=\"Link Text\"\r\n                            value={project.link.text}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].link.text = target.value||'';\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name={\"link\" + index}\r\n                            placeholder=\"Link Src\"\r\n                            value={project.link.src}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].link.src = target.value||'';\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableLink>\r\n                    </View>\r\n                    <EditableText\r\n                        text={project.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project duration\"\r\n                            placeholder='duration'\r\n                            value={project.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </View>\r\n                {project.points.map((point,indexp)=>{\r\n                    return (\r\n                        <EditableText\r\n                            text={\"- \" + point}\r\n                            placeholder={'point ' + (indexp + 1)}\r\n                            type=\"input\"\r\n                            childRef={inputRef}\r\n                            style={styles.points}\r\n                            >\r\n                            <input\r\n                                ref={inputRef}\r\n                                type=\"text\"\r\n                                name=\"project point\"\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                value={point}\r\n                                onChange={({target}) => setData(prev=>{\r\n                                    prev.projects[index].points[indexp] = target.value\r\n                                    return {...prev}\r\n                                })}\r\n                                style={{fontSize:'0.8em'}}\r\n                            />\r\n                            <button onClick={()=>setData(prev=>{\r\n                                prev.projects[index].points.splice(indexp+1,0,'');\r\n                                return {...prev}\r\n                            })}>Add</button>\r\n                            <button onClick={()=>setData(prev=>{\r\n                                if(prev.projects[index].points.length>1)\r\n                                prev.projects[index].points.splice(indexp,1);\r\n                                return {...prev}\r\n                            })}>remove</button>\r\n                        </EditableText>\r\n                    )\r\n                })}\r\n                </>\r\n                )\r\n            }):setData({...data,projects:[{head:'',link:{text:'',src:''},duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    tech:{\r\n        alignSelf:'stretch',\r\n        marginTop:'3mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n\r\n    },\r\n    head: {\r\n        fontSize: '12pt',\r\n        fontWeight:'bold',\r\n        marginTop:'2mm'\r\n    },\r\n    skills:{\r\n        fontSize:'11pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Tech({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.tech}>\r\n            <EditableText\r\n                text={data.tech}\r\n                placeholder=\"Technical skills\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"tech\"\r\n                    placeholder=\"Technical skills\"\r\n                    value={data.tech}\r\n                    onChange={e => setData({...data,tech:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.techs?data.techs.map((tech,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={tech.head}\r\n                        placeholder={\"Skill Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"tech head\"\r\n                            placeholder={\"Skill Title\" + (index + 1)}\r\n                            value={tech.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.techs[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.techs.splice(index+1,0,{head:'',points:''});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.techs.length>1)\r\n                            prev.techs.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableText\r\n                        text={tech.skills}\r\n                        placeholder={'skills'}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.skills}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"tech point\"\r\n                            placeholder='skills'\r\n                            value={tech.skills}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.techs[index].skills = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </>\r\n                )\r\n            }):setData({...data,techs:[{head:'',skills:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Tech\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    general:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n\r\n    },\r\n    skill:{\r\n        fontSize:'11pt',\r\n        marginTop:'2mm'\r\n    },\r\n    bar:{\r\n        height:'3pt',\r\n        backgroundColor:'#777777',\r\n        borderRadius:'3pt',\r\n        marginTop:'5pt',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'flex-start',\r\n        alignItems:'stretch',\r\n    },\r\n    val:{\r\n        backgroundColor:'red',\r\n        borderRadius:'3pt',\r\n    }\r\n})\r\n\r\nfunction General({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.general}>\r\n            <EditableText\r\n                text={data.general}\r\n                placeholder=\"General Skills\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"general\"\r\n                    placeholder=\"General Skills\"\r\n                    value={data.general}\r\n                    onChange={e => setData({...data,general:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.generals?data.generals.map((general,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={general.skill}\r\n                        placeholder={\"Skill Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.skill}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"general head\"\r\n                            placeholder={\"Skill Title\" + (index + 1)}\r\n                            value={general.skill}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.generals[index].skill = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"skill val\"\r\n                            placeholder='Val'\r\n                            value={general.val}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.generals[index].val = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.generals.splice(index+1,0,{skill:'',val:''});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.generals.length>1)\r\n                            prev.generals.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <View style={styles.bar}>\r\n                        <View style={{...styles.val,width:`${isNaN(parseInt(general.val))?'80%':parseInt(general.val)>100?'100%':parseInt(general.val) + '%'}`}}>\r\n                        </View>\r\n                    </View>\r\n                </>\r\n                )\r\n            }):setData({...data,generals:[{skill:'',val:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default General\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from '../editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    interest:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase'\r\n    },\r\n    block: {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap',\r\n        justifyContent:'flex-start',\r\n    },\r\n    text:{\r\n        fontSize: '11pt',\r\n        margin:'4pt 3pt',\r\n        backgroundColor:'#46919a',\r\n        color:'white',\r\n        padding:'3pt 6pt',\r\n        borderRadius:'10pt'\r\n    }\r\n})\r\n\r\nfunction Interest({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.interest}>\r\n            <EditableText\r\n                text={data.interest}\r\n                placeholder=\"INTEREST\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"interest\"\r\n                    placeholder=\"INTEREST\"\r\n                    value={data.interest}\r\n                    onChange={e => setData({...data,interest:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            <View style={styles.block}>\r\n            {data.interests?data.interests.map((interest,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={interest}\r\n                        placeholder={\"Interest\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.text}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"interest\"\r\n                            placeholder={\"Interest \" + (index + 1)}\r\n                            value={interest}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.interests[index] = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.interests.splice(index+1,0,'');\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.interests.length>1)\r\n                            prev.interests.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                </>\r\n                )\r\n            }):setData({...data,interests:['']})}\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Interest\r\n","import React from 'react'\r\nimport {View,StyleSheet} from '@react-pdf/renderer'\r\nimport Work from './work'\r\nimport Education from './education'\r\nimport Project from './project'\r\nimport Tech from './tech'\r\nimport General from './general'\r\nimport Interest from './interest'\r\n\r\nconst styles = StyleSheet.create({\r\n    view:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'stretch',\r\n        margin:'5mm 10mm'\r\n    },\r\n    left:{\r\n        flex:'1 0 65%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'65%',\r\n        // backgroundColor:'#e3e3e3',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        paddingRight:'10mm'\r\n    },\r\n    right:{\r\n        flex:'1 0 35%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'35%',\r\n    }\r\n})\r\n\r\nfunction Center({data,setData,web}) {\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <View style={styles.left}>\r\n                <Work data={data} setData={setData}/>\r\n                <Education data={data} setData={setData}/>\r\n                <Project data={data} setData={setData} web={web}/>\r\n            </View>\r\n            <View style={styles.right}>\r\n                <Tech data={data} setData={setData}/>\r\n                <General data={data} setData={setData} />\r\n                <Interest data={data} setData={setData} />\r\n            </View>    \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Base from './base'\r\nimport Header from './header'\r\nimport Center from './center'\r\n\r\n\r\n\r\nfunction Pdf({web,data,setData}) {\r\n    return (\r\n        <Base>\r\n            <Header data={data} setData={setData} web={web}/>\r\n            <Center data={data} setData={setData} web={web}/>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Pdf\r\n","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport Pdf from '../components/basic/pdf'\r\nimport {pdf} from '@react-pdf/renderer'\r\n\r\nconst MainDiv = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\npadding:10mm;\r\n@media (max-width:250mm){\r\n    align-items:flex-start;\r\n    padding:0mm;\r\n}\r\n`\r\nconst PdfContainer = styled.div`\r\n  height: 297mm;\r\n  width: 210mm;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 18px #525252;\r\n  font-size: 5mm;\r\n`\r\nconst Button = styled.button`\r\n  margin:30px 10px;\r\n  text-decoration:none;\r\n  border-style:none;\r\n  border:1px solid black;\r\n  padding:2px 10px;\r\n  font-size:18px;\r\n  background-color:transparent;\r\n`\r\nconst Input = styled.textarea`\r\n\r\n`\r\n\r\nfunction Basic() {\r\n    const [data,setData] = useState({});\r\n    const dataRef = useRef(null);\r\n\r\n    const createPdf = ()=>{\r\n        pdf(<Pdf web={false} data={data} setData={setData}/>).toBlob().then((blob)=>{\r\n          console.log(blob);\r\n          let a = document.createElement(\"a\");\r\n          document.body.appendChild(a);\r\n          a.style.display = \"none\";\r\n          let url = window.URL.createObjectURL(blob);\r\n          a.href = url;\r\n          a.download = \"cv.pdf\";\r\n          a.click();\r\n          window.URL.revokeObjectURL(url);\r\n          a.click();\r\n          a.remove();\r\n        })\r\n      }\r\n      const createDataFile = ()=>{\r\n        let a = document.createElement(\"a\");\r\n        let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\r\n        a.href = dataStr;\r\n        a.download = \"data.json\";\r\n        a.click();\r\n        a.remove();\r\n      }\r\n\r\n    return (\r\n        <MainDiv>\r\n            <PdfContainer>\r\n                <Pdf web={true} data={data} setData={setData}/>\r\n            </PdfContainer>\r\n            <div>\r\n            <Button onClick={createPdf}>DOWNLOAD PDF</Button>\r\n            <Button onClick={createDataFile}>DOWNLOAD JSON</Button>\r\n            </div>\r\n            <div>\r\n            <Input type=\"text\"\r\n              ref={dataRef}\r\n              name=\"data Json\"\r\n              value={JSON.stringify(data)}\r\n              placeholder={JSON.stringify(data)}\r\n              cols='80'\r\n              rows='5'\r\n              onChange={({target})=>{\r\n                try{\r\n                  let val = JSON.parse(target.value);\r\n                  setData(val);\r\n                }catch(error){\r\n                  console.log(error)\r\n                }\r\n              }}\r\n            ></Input>\r\n            </div>\r\n          </MainDiv>\r\n    )\r\n}\r\n\r\nexport default Basic\r\n"],"sourceRoot":""}