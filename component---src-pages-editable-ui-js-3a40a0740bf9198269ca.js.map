{"version":3,"sources":["webpack:///./src/images/link.png","webpack:///./src/components/editable-ui/base.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/editable-ui/editable.js","webpack:///./src/components/editable-ui/name.js","webpack:///./src/components/editable-ui/links.js","webpack:///./src/components/editable-ui/about.js","webpack:///./src/components/editable-ui/header.js","webpack:///./src/components/editable-ui/work.js","webpack:///./src/components/editable-ui/education.js","webpack:///./src/components/editable-ui/project.js","webpack:///./src/components/editable-ui/tech.js","webpack:///./src/components/editable-ui/general.js","webpack:///./src/components/editable-ui/interest.js","webpack:///./src/components/editable-ui/center.js","webpack:///./src/components/editable-ui/pdf.js","webpack:///./src/pages/editable-ui.js"],"names":["module","exports","Font","register","family","fonts","src","AbelPro","AbelProBold","fontWeight","registerHyphenationCallback","word","styles","StyleSheet","create","page","display","flexDirection","alignItems","wordBreak","fontFamily","fontSize","lineHeight","Base","children","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","size","style","EditableText","text","placeholder","type","childRef","useState","isEditing","setEditing","useEffect","current","focus","onBlur","e","currentTarget","contains","relatedTarget","onKeyDown","event","allKeys","handleKeyDown","onClick","EditableLink","web","name","alignSelf","marginLeft","color","Name","data","setData","inputRef","useRef","ref","value","onChange","links","flexWrap","justifyContent","padding","marginTop","backgroundColor","link","flex","flexGrow","flexShrink","flexBasis","textDecoration","img","height","width","marginRight","Links","map","index","LinkImg","alt","prev","splice","about","About","cols","rows","view","paddingTop","Header","work","title","textTransform","borderBottom","headView","head","duration","points","Work","works","point","indexp","education","left","right","textAlign","Education","educations","project","Project","projects","tech","skills","Tech","techs","general","skill","bar","borderRadius","val","bar_color","General","generals","isNaN","parseInt","interest","block","margin","int_color","Interest","interests","borderColor","paddingRight","Center","Pdf","MainDiv","styled","div","PdfContainer","Button","button","Input","textarea","Basic","dataRef","className","to","href","pdf","toBlob","then","blob","console","log","a","document","createElement","body","appendChild","url","window","URL","createObjectURL","download","click","revokeObjectURL","remove","dataStr","encodeURIComponent","JSON","stringify","parse","error"],"mappings":"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","file":"component---src-pages-editable-ui-js-3a40a0740bf9198269ca.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/link-2992c9960c22839fb535fa0444b7b707.png\";","import React from 'react'\r\nimport AbelPro from '../../fonts/Abel-Pro/AbelPro.ttf'\r\nimport AbelProBold from '../../fonts/Abel-Pro/AbelPro-Bold.ttf'\r\nimport {Document,Page,StyleSheet,Font} from '@react-pdf/renderer'\r\n\r\nFont.register({family:'Abel-Pro', fonts:[ {src:AbelPro}, {src:AbelProBold, fontWeight:'bold'}, ] })\r\nFont.registerHyphenationCallback(word => {\r\n    return [word];\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'stretch',\r\n        wordBreak:'keep-all',\r\n        fontFamily:'Abel-Pro',\r\n        fontSize:'5mm',\r\n        lineHeight:'1.2'\r\n    }\r\n});\r\n\r\nfunction Base({children,...props}) {\r\n    return (\r\n        <Document>\r\n            <Page size='A4' style={styles.page}>\r\n                {children}\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\n\r\nexport default Base\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState, useEffect } from 'react'\r\nimport {Text,Link} from '@react-pdf/renderer'\r\n\r\nexport function EditableText({text,placeholder,type,children,style,childRef}) {\r\n    const [isEditing,setEditing] = useState(false);\r\n    \r\n    const handleKeyDown = (event, type) => {\r\n        const { key } = event;\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; \r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n          childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    return (\r\n        isEditing?(\r\n            <div\r\n            style={style}\r\n            onBlur={(e) => {\r\n                if(!e.currentTarget.contains(e.relatedTarget))\r\n                    setEditing(false)\r\n            }}\r\n            onKeyDown={e => handleKeyDown(e, type)}>\r\n                {children}\r\n            </div>\r\n        ):(\r\n            <Text style={style} onClick={()=>setEditing(true)}>{text||placeholder}</Text>\r\n        )\r\n    )\r\n}\r\n\r\nexport function EditableLink({web,src,text,placeholder,type,children,style,childRef}) {\r\n    const [isEditing,setEditing] = useState(false);\r\n    const handleKeyDown = (event, type) => {\r\n        const { key } = event;\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; \r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n          childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    return (\r\n        isEditing?(\r\n            <div\r\n            style={style}\r\n            onBlur={(e) => {\r\n                if(!e.currentTarget.contains(e.relatedTarget))\r\n                    setEditing(false)\r\n            }}\r\n            onKeyDown={e => handleKeyDown(e, type)}>\r\n                {children}\r\n            </div>\r\n        ):(\r\n            web?\r\n            <span style={style} onClick={()=>setEditing(true)}>{text||placeholder}</span>:\r\n            <Text style={style}onClick={()=>setEditing(true)}><Link src={src}>{text||placeholder}</Link></Text>\r\n        )\r\n    )\r\n}","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    name:{\r\n        alignSelf:'flex-start',\r\n        marginLeft:'10mm',\r\n        fontSize:'8mm',\r\n        fontWeight:'bold',\r\n        color:'#023047'\r\n    }\r\n})\r\n\r\nfunction Name({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <EditableText\r\n            text={data.name}\r\n            placeholder=\"YOUR NAME\"\r\n            type=\"input\"\r\n            childRef={inputRef}\r\n            style={styles.name}\r\n            >\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                name=\"NAME\"\r\n                placeholder=\"YOUR NAME\"\r\n                value={data.name}\r\n                onChange={e => setData({...data,name:e.target.value})}\r\n                style={{fontSize:'0.8em'}}\r\n            />\r\n        </EditableText>\r\n    )\r\n}\r\n\r\nexport default Name\r\n","import React,{useRef} from 'react'\r\nimport {EditableLink} from './editable'\r\nimport {StyleSheet,View,Image} from '@react-pdf/renderer'\r\nimport LinkImg from '../../images/link.png'\r\n\r\nconst styles = StyleSheet.create({\r\n    links:{\r\n        fontSize:'4mm',\r\n        fontWeight:'normal',\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap',\r\n        justifyContent:'flex-start',\r\n        padding:'5pt 20mm 5pt 20mm',\r\n        marginTop:'4mm',\r\n        backgroundColor:'#f4f4f4'\r\n    },\r\n    link:{\r\n        flex:'1 0 40%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'40%',\r\n        textDecoration:'none',\r\n        padding:'3pt 0pt',\r\n        color:'green',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'center'\r\n    },\r\n    img:{\r\n        height:'3mm',\r\n        width:'3mm',\r\n        marginRight:'2mm'\r\n    }\r\n})\r\n\r\nfunction Links({data,setData,web}) {\r\n    const inputRef = useRef(null);\r\n    return (\r\n        <View style={styles.links}>\r\n        {data.links?data.links.map((link,index)=>{\r\n            return (\r\n                <View style={styles.link}>\r\n                {web?(<img src={LinkImg} style={styles.img} alt='link'/>):(<Image src={LinkImg} style={styles.img}></Image>)}    \r\n                <EditableLink\r\n                    text={link.text}\r\n                    src = {link.src}\r\n                    placeholder={\"Link \" + (index+1)}\r\n                    type=\"input\"\r\n                    childRef={inputRef}\r\n                    web={web}\r\n                    >\r\n                    <input\r\n                        ref={inputRef}\r\n                        type=\"text\"\r\n                        name={\"link\" + index}\r\n                        placeholder=\"Link Text\"\r\n                        value={link.text}\r\n                        onChange={({target}) => setData(prev=>{\r\n                            prev.links[index].text = target.value||'';\r\n                            return {...prev}\r\n                        })}\r\n                        style={{fontSize:'0.8em'}}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name={\"link\" + index}\r\n                        placeholder=\"Link Src\"\r\n                        value={link.src}\r\n                        onChange={({target}) => setData(prev=>{\r\n                            prev.links[index].src = target.value||'';\r\n                            return {...prev}\r\n                        })}\r\n                        style={{fontSize:'0.8em'}}\r\n                    />\r\n                    <button onClick={()=>setData(prev=>{\r\n                        prev.links.splice(index+1,0,{text:'',src:''});\r\n                        return {...prev}\r\n                    })}>Add</button>\r\n                    <button onClick={()=>setData(prev=>{\r\n                        if(prev.links.length>1)\r\n                            prev.links.splice(index,1);\r\n                        return {...prev}\r\n                    })}>remove</button>\r\n                </EditableLink>\r\n                </View>\r\n            )\r\n        }):setData({...data,links:[{text:'',src:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    about:{\r\n        fontSize:'4mm',\r\n        fontWeight:'normal',\r\n        alignSelf:'flex-start',\r\n        marginLeft:'10mm',\r\n        color:'#3f3f3f',\r\n        marginRight:'20mm',\r\n        marginTop:'1mm'\r\n    }\r\n})\r\n\r\nfunction About({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <EditableText\r\n            text={data.about}\r\n            placeholder=\"Your About\"\r\n            type=\"textarea\"\r\n            childRef={inputRef}\r\n            style={styles.about}\r\n            >\r\n            <textarea\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                name=\"about\"\r\n                placeholder=\"Your About\"\r\n                value={data.about}\r\n                onChange={e => setData({...data,about:e.target.value})}\r\n                style={{fontSize:'0.9em'}}\r\n                cols='70'\r\n                rows='2'\r\n            />\r\n        </EditableText>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport {View,StyleSheet} from '@react-pdf/renderer'\r\nimport Name from './name'\r\nimport Links from './links'\r\nimport About from './about'\r\n\r\nconst styles = StyleSheet.create({\r\n    view:{\r\n        alignSelf:'stretch',\r\n        // backgroundColor:'#e3e3e3',\r\n        paddingTop:'8mm',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    }\r\n})\r\n\r\nfunction Header({data,setData,web}) {\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <Name data={data} setData={setData}/>\r\n            <About data={data} setData={setData}/>\r\n            <Links data={data} setData={setData} web={web}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    work:{\r\n        alignSelf:'stretch',\r\n        marginTop:'3mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'flex-end',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Work({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.work}>\r\n            <EditableText\r\n                text={data.work}\r\n                placeholder=\"WORK EXPERIENCE\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"WORK\"\r\n                    placeholder=\"WORK EXPERIENCE\"\r\n                    value={data.work}\r\n                    onChange={e => setData({...data,work:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.works?data.works.map((work,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <EditableText\r\n                        text={work.head}\r\n                        placeholder={\"Work Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"work head\"\r\n                            placeholder={\"Work Title\" + (index + 1)}\r\n                            value={work.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.works[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.works.splice(index+1,0,{head:'',duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.works.length>1)\r\n                            prev.works.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableText\r\n                        text={work.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"work duration\"\r\n                            placeholder='duration'\r\n                            value={work.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.works[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </View>\r\n                {work.points.map((point,indexp)=>{\r\n                    return (\r\n                        <EditableText\r\n                            text={\"- \" + point}\r\n                            placeholder={'point ' + (indexp + 1)}\r\n                            type=\"input\"\r\n                            childRef={inputRef}\r\n                            style={styles.points}\r\n                            >\r\n                            <input\r\n                                ref={inputRef}\r\n                                type=\"text\"\r\n                                name=\"work point\"\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                value={point}\r\n                                onChange={({target}) => setData(prev=>{\r\n                                    prev.works[index].points[indexp] = target.value\r\n                                    return {...prev}\r\n                                })}\r\n                                style={{fontSize:'0.8em'}}\r\n                            />\r\n                            <button onClick={()=>setData(prev=>{\r\n                                prev.works[index].points.splice(indexp+1,0,'');\r\n                                return {...prev}\r\n                            })}>Add</button>\r\n                            <button onClick={()=>setData(prev=>{\r\n                                if(prev.works[index].points.length>1)\r\n                                prev.works[index].points.splice(indexp,1);\r\n                                return {...prev}\r\n                            })}>remove</button>\r\n                        </EditableText>\r\n                    )\r\n                })}\r\n                </>\r\n                )\r\n            }):setData({...data,works:[{head:'',duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    education:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    left:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        flex:'1 0 60%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'60%'\r\n    },\r\n    right:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        flex:'1 0 40%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'40%'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n        alignSelf:'flex-start',\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867',\r\n        textAlign:'right'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Education({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.education}>\r\n            <EditableText\r\n                text={data.education}\r\n                placeholder=\"Education\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"edu\"\r\n                    placeholder=\"Education\"\r\n                    value={data.work}\r\n                    onChange={e => setData({...data,education:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.educations?data.educations.map((education,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <View style={styles.left}>\r\n                    <EditableText\r\n                        text={education.head}\r\n                        placeholder={\"Education Title \" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"edu head\"\r\n                            placeholder={\"Education Title \" + (index + 1)}\r\n                            value={education.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.educations[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.educations.splice(index+1,0,{head:'',duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.educations.length>1)\r\n                            prev.educations.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    {education.points.map((point,indexp)=>{\r\n                        return (\r\n                            <EditableText\r\n                                text={point}\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                type=\"input\"\r\n                                childRef={inputRef}\r\n                                style={styles.points}\r\n                                >\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"text\"\r\n                                    name=\"edu point\"\r\n                                    placeholder={'point ' + (indexp + 1)}\r\n                                    value={point}\r\n                                    onChange={({target}) => setData(prev=>{\r\n                                        prev.educations[index].points[indexp] = target.value\r\n                                        return {...prev}\r\n                                    })}\r\n                                    style={{fontSize:'0.8em'}}\r\n                                />\r\n                                <button onClick={()=>setData(prev=>{\r\n                                    prev.educations[index].points.splice(indexp+1,0,'');\r\n                                    return {...prev}\r\n                                })}>Add</button>\r\n                                <button onClick={()=>setData(prev=>{\r\n                                    if(prev.works[index].points.length>1)\r\n                                    prev.educations[index].points.splice(indexp,1);\r\n                                    return {...prev}\r\n                                })}>remove</button>\r\n                            </EditableText>\r\n                        )\r\n                    })}\r\n                    </View>\r\n\r\n                    <View style={styles.right}>\r\n                    <EditableText\r\n                        text={education.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"textarea\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <textarea\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"edu duration\"\r\n                            placeholder='duration'\r\n                            value={education.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.educations[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                    </View>\r\n                    \r\n                </View>\r\n                </>\r\n                )\r\n            }):setData({...data,educations:[{head:'',duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React,{useRef} from 'react'\r\nimport {EditableText,EditableLink} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    project:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n\r\n    },\r\n    headView:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'flex-end',\r\n        justifyContent:'space-between',\r\n        marginTop:'2mm'\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        fontWeight:'bold',\r\n    },\r\n    link:{\r\n        textDecoration:'none',\r\n        fontSize:'12pt',\r\n        color:'green',\r\n        alignSelf:'center',\r\n        marginLeft:'4pt'\r\n    },\r\n    duration:{\r\n        fontSize:'10pt',\r\n        color:'#656867'\r\n    },\r\n    points:{\r\n        fontSize:'12pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Project({data,setData,web}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.project}>\r\n            <EditableText\r\n                text={data.project}\r\n                placeholder=\"Projects\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"project\"\r\n                    placeholder=\"Projects\"\r\n                    value={data.project}\r\n                    onChange={e => setData({...data,project:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.projects?data.projects.map((project,index)=>{\r\n                return (\r\n                    <>\r\n                    <View style={styles.headView}>\r\n                    <View style={{display:'flex',flexDirection:'row'}}>\r\n                    <EditableText\r\n                        text={project.head}\r\n                        placeholder={\"Project Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project head\"\r\n                            placeholder={\"Project Title\" + (index + 1)}\r\n                            value={project.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.projects.splice(index+1,0,{head:'',link:{text:'',src:''},duration:'',points:['']});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.projects.length>1)\r\n                            prev.projects.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableLink\r\n                        text={\"[\" + project.link.text + \"]\"}\r\n                        src = {project.link.src}\r\n                        placeholder='Link'\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        web={web}\r\n                        style={styles.link}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project link\"\r\n                            placeholder=\"Link Text\"\r\n                            value={project.link.text}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].link.text = target.value||'';\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name={\"link\" + index}\r\n                            placeholder=\"Link Src\"\r\n                            value={project.link.src}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].link.src = target.value||'';\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableLink>\r\n                    </View>\r\n                    <EditableText\r\n                        text={project.duration}\r\n                        placeholder=\"duration\"\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.duration}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"project duration\"\r\n                            placeholder='duration'\r\n                            value={project.duration}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.projects[index].duration = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </View>\r\n                {project.points.map((point,indexp)=>{\r\n                    return (\r\n                        <EditableText\r\n                            text={\"- \" + point}\r\n                            placeholder={'point ' + (indexp + 1)}\r\n                            type=\"input\"\r\n                            childRef={inputRef}\r\n                            style={styles.points}\r\n                            >\r\n                            <input\r\n                                ref={inputRef}\r\n                                type=\"text\"\r\n                                name=\"project point\"\r\n                                placeholder={'point ' + (indexp + 1)}\r\n                                value={point}\r\n                                onChange={({target}) => setData(prev=>{\r\n                                    prev.projects[index].points[indexp] = target.value\r\n                                    return {...prev}\r\n                                })}\r\n                                style={{fontSize:'0.8em'}}\r\n                            />\r\n                            <button onClick={()=>setData(prev=>{\r\n                                prev.projects[index].points.splice(indexp+1,0,'');\r\n                                return {...prev}\r\n                            })}>Add</button>\r\n                            <button onClick={()=>setData(prev=>{\r\n                                if(prev.projects[index].points.length>1)\r\n                                prev.projects[index].points.splice(indexp,1);\r\n                                return {...prev}\r\n                            })}>remove</button>\r\n                        </EditableText>\r\n                    )\r\n                })}\r\n                </>\r\n                )\r\n            }):setData({...data,projects:[{head:'',link:{text:'',src:''},duration:'',points:['']}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    tech:{\r\n        alignSelf:'stretch',\r\n        marginTop:'3mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n\r\n    },\r\n    head: {\r\n        fontSize: '12pt',\r\n        fontWeight:'bold',\r\n        marginTop:'2mm'\r\n    },\r\n    skills:{\r\n        fontSize:'11pt'\r\n    }\r\n    \r\n\r\n})\r\n\r\nfunction Tech({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.tech}>\r\n            <EditableText\r\n                text={data.tech}\r\n                placeholder=\"Technical skills\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"tech\"\r\n                    placeholder=\"Technical skills\"\r\n                    value={data.tech}\r\n                    onChange={e => setData({...data,tech:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.techs?data.techs.map((tech,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={tech.head}\r\n                        placeholder={\"Skill Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.head}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"tech head\"\r\n                            placeholder={\"Skill Title\" + (index + 1)}\r\n                            value={tech.head}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.techs[index].head = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.techs.splice(index+1,0,{head:'',points:''});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.techs.length>1)\r\n                            prev.techs.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <EditableText\r\n                        text={tech.skills}\r\n                        placeholder={'skills'}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.skills}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"tech point\"\r\n                            placeholder='skills'\r\n                            value={tech.skills}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.techs[index].skills = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                    </EditableText>\r\n                </>\r\n                )\r\n            }):setData({...data,techs:[{head:'',skills:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Tech\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    general:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n\r\n    },\r\n    skill:{\r\n        fontSize:'11pt',\r\n        marginTop:'2mm'\r\n    },\r\n    bar:{\r\n        height:'3pt',\r\n        backgroundColor:'#a2d2ff',\r\n        borderRadius:'3pt',\r\n        marginTop:'5pt',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'flex-start',\r\n        alignItems:'stretch',\r\n    },\r\n    val:{\r\n        backgroundColor:'#ffafcc',\r\n        borderRadius:'3pt',\r\n    }\r\n})\r\n\r\nconst bar_color = [\r\n    {\r\n        bar:'#66c2a3',\r\n        val:'#03734d'\r\n    },\r\n    {\r\n        bar:'#93bfeb',\r\n        val:'#1866b4'\r\n    },\r\n    {\r\n        bar:'#f5aa85',\r\n        val:'#cc4300'\r\n    },\r\n    {\r\n        bar:'#f490ae',\r\n        val:'#d70947'\r\n    },\r\n    {\r\n        bar:'#be9de2',\r\n        val:'#772acb'\r\n    },\r\n]\r\nfunction General({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.general}>\r\n            <EditableText\r\n                text={data.general}\r\n                placeholder=\"General Skills\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"general\"\r\n                    placeholder=\"General Skills\"\r\n                    value={data.general}\r\n                    onChange={e => setData({...data,general:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            {data.generals?data.generals.map((general,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={general.skill}\r\n                        placeholder={\"Skill Title\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={styles.skill}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"general head\"\r\n                            placeholder={\"Skill Title\" + (index + 1)}\r\n                            value={general.skill}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.generals[index].skill = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"skill val\"\r\n                            placeholder='Val'\r\n                            value={general.val}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.generals[index].val = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.generals.splice(index+1,0,{skill:'',val:''});\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.generals.length>1)\r\n                            prev.generals.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                    <View style={{...styles.bar,backgroundColor:bar_color[index%bar_color.length].bar}}>\r\n                        <View style={{...styles.val,width:`${isNaN(parseInt(general.val))?'80%':parseInt(general.val)>100?'100%':parseInt(general.val) + '%'}`,backgroundColor:bar_color[index%bar_color.length].val}}>\r\n                        </View>\r\n                    </View>\r\n                </>\r\n                )\r\n            }):setData({...data,generals:[{skill:'',val:''}]})}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default General\r\n","import React,{useRef} from 'react'\r\nimport {EditableText} from './editable'\r\nimport {StyleSheet,View} from '@react-pdf/renderer'\r\n\r\nconst styles = StyleSheet.create({\r\n    interest:{\r\n        alignSelf:'stretch',\r\n        marginTop:'6mm',\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    title:{\r\n        fontSize: '5mm',\r\n        color:'#46919a',\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        borderBottom:'1pt solid #46919a'\r\n    },\r\n    block: {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap',\r\n        justifyContent:'flex-start',\r\n        marginTop:'2mm'\r\n    },\r\n    text:{\r\n        fontSize: '11pt',\r\n        margin:'4pt 3pt',\r\n        backgroundColor:'#46919a',\r\n        color:'white',\r\n        padding:'3pt 6pt',\r\n        borderRadius:'10pt'\r\n    }\r\n})\r\n\r\nconst int_color = ['#921473','#1866b4','#cc4300','#d70947','#772acb']\r\n\r\nfunction Interest({data,setData}) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <View style={styles.interest}>\r\n            <EditableText\r\n                text={data.interest}\r\n                placeholder=\"INTEREST\"\r\n                type=\"input\"\r\n                childRef={inputRef}\r\n                style={styles.title}\r\n                >\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    name=\"interest\"\r\n                    placeholder=\"INTEREST\"\r\n                    value={data.interest}\r\n                    onChange={e => setData({...data,interest:e.target.value})}\r\n                    style={{fontSize:'0.8em'}}\r\n                />\r\n            </EditableText>\r\n            <View style={styles.block}>\r\n            {data.interests?data.interests.map((interest,index)=>{\r\n                return (\r\n                    <>\r\n                    <EditableText\r\n                        text={interest}\r\n                        placeholder={\"Interest\" + (index + 1)}\r\n                        type=\"input\"\r\n                        childRef={inputRef}\r\n                        style={{...styles.text,backgroundColor:int_color[index%int_color.length]}}\r\n                        >\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"interest\"\r\n                            placeholder={\"Interest \" + (index + 1)}\r\n                            value={interest}\r\n                            onChange={({target}) => setData(prev=>{\r\n                                prev.interests[index] = target.value\r\n                                return {...prev}\r\n                            })}\r\n                            style={{fontSize:'0.8em',color:'white',borderColor:'white'}}\r\n                        />\r\n                        <button onClick={()=>setData(prev=>{\r\n                            prev.interests.splice(index+1,0,'');\r\n                            return {...prev}\r\n                        })}>Add</button>\r\n                        <button onClick={()=>setData(prev=>{\r\n                            if(prev.interests.length>1)\r\n                            prev.interests.splice(index,1);\r\n                            return {...prev}\r\n                        })}>remove</button>\r\n                    </EditableText>\r\n                </>\r\n                )\r\n            }):setData({...data,interests:['']})}\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Interest\r\n","import React from 'react'\r\nimport {View,StyleSheet} from '@react-pdf/renderer'\r\nimport Work from './work'\r\nimport Education from './education'\r\nimport Project from './project'\r\nimport Tech from './tech'\r\nimport General from './general'\r\nimport Interest from './interest'\r\n\r\nconst styles = StyleSheet.create({\r\n    view:{\r\n        alignSelf:'stretch',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'stretch',\r\n        margin:'5mm 10mm'\r\n    },\r\n    left:{\r\n        flex:'1 0 65%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'65%',\r\n        // backgroundColor:'#e3e3e3',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        paddingRight:'15mm'\r\n    },\r\n    right:{\r\n        flex:'1 0 35%',\r\n        flexGrow:'1',\r\n        flexShrink:'0',\r\n        flexBasis:'35%',\r\n    }\r\n})\r\n\r\nfunction Center({data,setData,web}) {\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <View style={styles.left}>\r\n                <Work data={data} setData={setData}/>\r\n                <Education data={data} setData={setData}/>\r\n                <Project data={data} setData={setData} web={web}/>\r\n            </View>\r\n            <View style={styles.right}>\r\n                <Tech data={data} setData={setData}/>\r\n                <General data={data} setData={setData} />\r\n                <Interest data={data} setData={setData} />\r\n            </View>    \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Base from './base'\r\nimport Header from './header'\r\nimport Center from './center'\r\n\r\n\r\n\r\nfunction Pdf({web,data,setData}) {\r\n    return (\r\n        <Base>\r\n            <Header data={data} setData={setData} web={web}/>\r\n            <Center data={data} setData={setData} web={web}/>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Pdf\r\n","import React, { useState, useRef } from 'react'\r\nimport {Link as GLink} from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport Pdf from '../components/editable-ui/pdf'\r\nimport {pdf} from '@react-pdf/renderer'\r\n\r\nconst MainDiv = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\npadding:5mm 10mm;\r\n.head {\r\n  display: flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n}\r\n.links {\r\n  display:flex;\r\n  flex-direction:row;\r\n}\r\n.links a, .link{\r\n  text-decoration:none;\r\n  color:green;\r\n  margin: 0px 20px 10px 20px;\r\n}\r\n@media (max-width:250mm){\r\n    align-items:flex-start;\r\n    padding:0mm;\r\n}\r\n`\r\nconst PdfContainer = styled.div`\r\n  height: 297mm;\r\n  width: 210mm;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 18px #525252;\r\n  font-size: 5mm;\r\n  & input, & textarea{\r\n    border-style:none;\r\n    border:1px solid black;\r\n    background-color:transparent;\r\n    padding:1px 2px;\r\n    margin:1px 1px;\r\n    width:100%;\r\n  }\r\n  & button{\r\n    text-decoration:none;\r\n    border-style:none;\r\n    border:1px solid black;\r\n    margin:1px 1px;\r\n    padding:1px 2px;\r\n    color:#ffffff;\r\n    background-color:green;\r\n  }\r\n  & button:last-child{\r\n    background-color:red;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  margin:30px 10px;\r\n  text-decoration:none;\r\n  border-style:none;\r\n  border:1px solid black;\r\n  padding:2px 10px;\r\n  font-size:18px;\r\n  background-color:transparent;\r\n`\r\nconst Input = styled.textarea`\r\n\r\n`\r\n\r\nfunction Basic() {\r\n    const [data,setData] = useState({});\r\n    const dataRef = useRef(null);\r\n\r\n    const createPdf = ()=>{\r\n        pdf(<Pdf web={false} data={data} setData={setData}/>).toBlob().then((blob)=>{\r\n          console.log(blob);\r\n          let a = document.createElement(\"a\");\r\n          document.body.appendChild(a);\r\n          a.style.display = \"none\";\r\n          let url = window.URL.createObjectURL(blob);\r\n          a.href = url;\r\n          a.download = (data.name||'resume') + \".pdf\";\r\n          a.click();\r\n          window.URL.revokeObjectURL(url);\r\n          a.click();\r\n          a.remove();\r\n        })\r\n      }\r\n      const createDataFile = ()=>{\r\n        let a = document.createElement(\"a\");\r\n        let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\r\n        a.href = dataStr;\r\n        a.download = (data.name||'resume') + \".json\";\r\n        a.click();\r\n        a.remove();\r\n      }\r\n\r\n    return (\r\n        <MainDiv>\r\n          <main>\r\n            <title>CV | Editable UI</title>\r\n          </main>\r\n            <div className=\"head\">\r\n              <h1>EDITABLE UI RESUME BUILDER</h1>\r\n              <span className=\"links\">\r\n              <GLink className=\"link\" to='/'>Home</GLink>\r\n              <a href=\"https://github.com/SlayerAnsh\">SlayerAnsh</a>\r\n              </span>\r\n            </div>\r\n            <PdfContainer>\r\n                <Pdf web={true} data={data} setData={setData}/>\r\n            </PdfContainer>\r\n            <div>\r\n            <Button onClick={createPdf}>DOWNLOAD PDF</Button>\r\n            <Button onClick={createDataFile}>DOWNLOAD JSON</Button>\r\n            </div>\r\n            <div>\r\n            <Input type=\"text\"\r\n              ref={dataRef}\r\n              name=\"data Json\"\r\n              value={JSON.stringify(data)}\r\n              placeholder={JSON.stringify(data)}\r\n              cols='80'\r\n              rows='5'\r\n              onChange={({target})=>{\r\n                try{\r\n                  let val = JSON.parse(target.value);\r\n                  setData(val);\r\n                }catch(error){\r\n                  console.log(error)\r\n                }\r\n              }}\r\n            ></Input>\r\n            </div>\r\n          </MainDiv>\r\n    )\r\n}\r\n\r\nexport default Basic\r\n"],"sourceRoot":""}